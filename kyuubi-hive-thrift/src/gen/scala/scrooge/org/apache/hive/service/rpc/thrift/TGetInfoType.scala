/**
 * Generated by Scrooge
 *   version: 19.12.0
 *   rev: dfdb68cf6b9c501dbbe3ae644504bf403ad76bfa
 *   built at: 20191212-171820
 */
package org.apache.hive.service.rpc.thrift

import com.twitter.scrooge.ThriftEnum
import scala.collection.immutable.{Map => immutable$Map}


@javax.annotation.Generated(value = Array("com.twitter.scrooge.Compiler"))
case object TGetInfoType extends _root_.com.twitter.scrooge.ThriftEnumObject[TGetInfoType] {

  val annotations: immutable$Map[String, String] = immutable$Map.empty

  
  case object CliMaxDriverConnections extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 0
    val name: String = "CliMaxDriverConnections"
    val originalName: String = "CLI_MAX_DRIVER_CONNECTIONS"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliMaxDriverConnections = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxDriverConnections)
  
  case object CliMaxConcurrentActivities extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 1
    val name: String = "CliMaxConcurrentActivities"
    val originalName: String = "CLI_MAX_CONCURRENT_ACTIVITIES"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliMaxConcurrentActivities = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxConcurrentActivities)
  
  case object CliDataSourceName extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 2
    val name: String = "CliDataSourceName"
    val originalName: String = "CLI_DATA_SOURCE_NAME"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliDataSourceName = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliDataSourceName)
  
  case object CliFetchDirection extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 8
    val name: String = "CliFetchDirection"
    val originalName: String = "CLI_FETCH_DIRECTION"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliFetchDirection = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliFetchDirection)
  
  case object CliServerName extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 13
    val name: String = "CliServerName"
    val originalName: String = "CLI_SERVER_NAME"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliServerName = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliServerName)
  
  case object CliSearchPatternEscape extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 14
    val name: String = "CliSearchPatternEscape"
    val originalName: String = "CLI_SEARCH_PATTERN_ESCAPE"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliSearchPatternEscape = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliSearchPatternEscape)
  
  case object CliDbmsName extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 17
    val name: String = "CliDbmsName"
    val originalName: String = "CLI_DBMS_NAME"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliDbmsName = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliDbmsName)
  
  case object CliDbmsVer extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 18
    val name: String = "CliDbmsVer"
    val originalName: String = "CLI_DBMS_VER"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliDbmsVer = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliDbmsVer)
  
  case object CliAccessibleTables extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 19
    val name: String = "CliAccessibleTables"
    val originalName: String = "CLI_ACCESSIBLE_TABLES"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliAccessibleTables = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliAccessibleTables)
  
  case object CliAccessibleProcedures extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 20
    val name: String = "CliAccessibleProcedures"
    val originalName: String = "CLI_ACCESSIBLE_PROCEDURES"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliAccessibleProcedures = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliAccessibleProcedures)
  
  case object CliCursorCommitBehavior extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 23
    val name: String = "CliCursorCommitBehavior"
    val originalName: String = "CLI_CURSOR_COMMIT_BEHAVIOR"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliCursorCommitBehavior = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliCursorCommitBehavior)
  
  case object CliDataSourceReadOnly extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 25
    val name: String = "CliDataSourceReadOnly"
    val originalName: String = "CLI_DATA_SOURCE_READ_ONLY"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliDataSourceReadOnly = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliDataSourceReadOnly)
  
  case object CliDefaultTxnIsolation extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 26
    val name: String = "CliDefaultTxnIsolation"
    val originalName: String = "CLI_DEFAULT_TXN_ISOLATION"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliDefaultTxnIsolation = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliDefaultTxnIsolation)
  
  case object CliIdentifierCase extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 28
    val name: String = "CliIdentifierCase"
    val originalName: String = "CLI_IDENTIFIER_CASE"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliIdentifierCase = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliIdentifierCase)
  
  case object CliIdentifierQuoteChar extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 29
    val name: String = "CliIdentifierQuoteChar"
    val originalName: String = "CLI_IDENTIFIER_QUOTE_CHAR"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliIdentifierQuoteChar = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliIdentifierQuoteChar)
  
  case object CliMaxColumnNameLen extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 30
    val name: String = "CliMaxColumnNameLen"
    val originalName: String = "CLI_MAX_COLUMN_NAME_LEN"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliMaxColumnNameLen = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxColumnNameLen)
  
  case object CliMaxCursorNameLen extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 31
    val name: String = "CliMaxCursorNameLen"
    val originalName: String = "CLI_MAX_CURSOR_NAME_LEN"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliMaxCursorNameLen = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxCursorNameLen)
  
  case object CliMaxSchemaNameLen extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 32
    val name: String = "CliMaxSchemaNameLen"
    val originalName: String = "CLI_MAX_SCHEMA_NAME_LEN"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliMaxSchemaNameLen = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxSchemaNameLen)
  
  case object CliMaxCatalogNameLen extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 34
    val name: String = "CliMaxCatalogNameLen"
    val originalName: String = "CLI_MAX_CATALOG_NAME_LEN"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliMaxCatalogNameLen = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxCatalogNameLen)
  
  case object CliMaxTableNameLen extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 35
    val name: String = "CliMaxTableNameLen"
    val originalName: String = "CLI_MAX_TABLE_NAME_LEN"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliMaxTableNameLen = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxTableNameLen)
  
  case object CliScrollConcurrency extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 43
    val name: String = "CliScrollConcurrency"
    val originalName: String = "CLI_SCROLL_CONCURRENCY"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliScrollConcurrency = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliScrollConcurrency)
  
  case object CliTxnCapable extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 46
    val name: String = "CliTxnCapable"
    val originalName: String = "CLI_TXN_CAPABLE"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliTxnCapable = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliTxnCapable)
  
  case object CliUserName extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 47
    val name: String = "CliUserName"
    val originalName: String = "CLI_USER_NAME"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliUserName = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliUserName)
  
  case object CliTxnIsolationOption extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 72
    val name: String = "CliTxnIsolationOption"
    val originalName: String = "CLI_TXN_ISOLATION_OPTION"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliTxnIsolationOption = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliTxnIsolationOption)
  
  case object CliIntegrity extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 73
    val name: String = "CliIntegrity"
    val originalName: String = "CLI_INTEGRITY"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliIntegrity = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliIntegrity)
  
  case object CliGetdataExtensions extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 81
    val name: String = "CliGetdataExtensions"
    val originalName: String = "CLI_GETDATA_EXTENSIONS"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliGetdataExtensions = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliGetdataExtensions)
  
  case object CliNullCollation extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 85
    val name: String = "CliNullCollation"
    val originalName: String = "CLI_NULL_COLLATION"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliNullCollation = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliNullCollation)
  
  case object CliAlterTable extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 86
    val name: String = "CliAlterTable"
    val originalName: String = "CLI_ALTER_TABLE"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliAlterTable = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliAlterTable)
  
  case object CliOrderByColumnsInSelect extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 90
    val name: String = "CliOrderByColumnsInSelect"
    val originalName: String = "CLI_ORDER_BY_COLUMNS_IN_SELECT"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliOrderByColumnsInSelect = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliOrderByColumnsInSelect)
  
  case object CliSpecialCharacters extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 94
    val name: String = "CliSpecialCharacters"
    val originalName: String = "CLI_SPECIAL_CHARACTERS"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliSpecialCharacters = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliSpecialCharacters)
  
  case object CliMaxColumnsInGroupBy extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 97
    val name: String = "CliMaxColumnsInGroupBy"
    val originalName: String = "CLI_MAX_COLUMNS_IN_GROUP_BY"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliMaxColumnsInGroupBy = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxColumnsInGroupBy)
  
  case object CliMaxColumnsInIndex extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 98
    val name: String = "CliMaxColumnsInIndex"
    val originalName: String = "CLI_MAX_COLUMNS_IN_INDEX"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliMaxColumnsInIndex = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxColumnsInIndex)
  
  case object CliMaxColumnsInOrderBy extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 99
    val name: String = "CliMaxColumnsInOrderBy"
    val originalName: String = "CLI_MAX_COLUMNS_IN_ORDER_BY"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliMaxColumnsInOrderBy = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxColumnsInOrderBy)
  
  case object CliMaxColumnsInSelect extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 100
    val name: String = "CliMaxColumnsInSelect"
    val originalName: String = "CLI_MAX_COLUMNS_IN_SELECT"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliMaxColumnsInSelect = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxColumnsInSelect)
  
  case object CliMaxColumnsInTable extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 101
    val name: String = "CliMaxColumnsInTable"
    val originalName: String = "CLI_MAX_COLUMNS_IN_TABLE"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliMaxColumnsInTable = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxColumnsInTable)
  
  case object CliMaxIndexSize extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 102
    val name: String = "CliMaxIndexSize"
    val originalName: String = "CLI_MAX_INDEX_SIZE"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliMaxIndexSize = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxIndexSize)
  
  case object CliMaxRowSize extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 104
    val name: String = "CliMaxRowSize"
    val originalName: String = "CLI_MAX_ROW_SIZE"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliMaxRowSize = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxRowSize)
  
  case object CliMaxStatementLen extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 105
    val name: String = "CliMaxStatementLen"
    val originalName: String = "CLI_MAX_STATEMENT_LEN"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliMaxStatementLen = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxStatementLen)
  
  case object CliMaxTablesInSelect extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 106
    val name: String = "CliMaxTablesInSelect"
    val originalName: String = "CLI_MAX_TABLES_IN_SELECT"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliMaxTablesInSelect = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxTablesInSelect)
  
  case object CliMaxUserNameLen extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 107
    val name: String = "CliMaxUserNameLen"
    val originalName: String = "CLI_MAX_USER_NAME_LEN"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliMaxUserNameLen = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxUserNameLen)
  
  case object CliOjCapabilities extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 115
    val name: String = "CliOjCapabilities"
    val originalName: String = "CLI_OJ_CAPABILITIES"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliOjCapabilities = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliOjCapabilities)
  
  case object CliXopenCliYear extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 10000
    val name: String = "CliXopenCliYear"
    val originalName: String = "CLI_XOPEN_CLI_YEAR"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliXopenCliYear = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliXopenCliYear)
  
  case object CliCursorSensitivity extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 10001
    val name: String = "CliCursorSensitivity"
    val originalName: String = "CLI_CURSOR_SENSITIVITY"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliCursorSensitivity = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliCursorSensitivity)
  
  case object CliDescribeParameter extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 10002
    val name: String = "CliDescribeParameter"
    val originalName: String = "CLI_DESCRIBE_PARAMETER"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliDescribeParameter = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliDescribeParameter)
  
  case object CliCatalogName extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 10003
    val name: String = "CliCatalogName"
    val originalName: String = "CLI_CATALOG_NAME"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliCatalogName = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliCatalogName)
  
  case object CliCollationSeq extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 10004
    val name: String = "CliCollationSeq"
    val originalName: String = "CLI_COLLATION_SEQ"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliCollationSeq = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliCollationSeq)
  
  case object CliMaxIdentifierLen extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 10005
    val name: String = "CliMaxIdentifierLen"
    val originalName: String = "CLI_MAX_IDENTIFIER_LEN"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliMaxIdentifierLen = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxIdentifierLen)
  
  case object CliOdbcKeywords extends org.apache.hive.service.rpc.thrift.TGetInfoType {
    val value: Int = 10006
    val name: String = "CliOdbcKeywords"
    val originalName: String = "CLI_ODBC_KEYWORDS"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeCliOdbcKeywords = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TGetInfoType.CliOdbcKeywords)

  case class EnumUnknownTGetInfoType(value: Int)
    extends org.apache.hive.service.rpc.thrift.TGetInfoType with _root_.com.twitter.scrooge.EnumItemUnknown
  {
    val name: String = "EnumUnknownTGetInfoType" + value
    def originalName: String = name
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  /**
   * Find the enum by its integer value, as defined in the Thrift IDL.
   */
  def apply(value: Int): org.apache.hive.service.rpc.thrift.TGetInfoType =
    value match {
      case 0 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxDriverConnections
      case 1 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxConcurrentActivities
      case 2 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliDataSourceName
      case 8 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliFetchDirection
      case 13 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliServerName
      case 14 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliSearchPatternEscape
      case 17 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliDbmsName
      case 18 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliDbmsVer
      case 19 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliAccessibleTables
      case 20 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliAccessibleProcedures
      case 23 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliCursorCommitBehavior
      case 25 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliDataSourceReadOnly
      case 26 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliDefaultTxnIsolation
      case 28 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliIdentifierCase
      case 29 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliIdentifierQuoteChar
      case 30 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxColumnNameLen
      case 31 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxCursorNameLen
      case 32 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxSchemaNameLen
      case 34 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxCatalogNameLen
      case 35 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxTableNameLen
      case 43 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliScrollConcurrency
      case 46 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliTxnCapable
      case 47 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliUserName
      case 72 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliTxnIsolationOption
      case 73 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliIntegrity
      case 81 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliGetdataExtensions
      case 85 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliNullCollation
      case 86 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliAlterTable
      case 90 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliOrderByColumnsInSelect
      case 94 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliSpecialCharacters
      case 97 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxColumnsInGroupBy
      case 98 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxColumnsInIndex
      case 99 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxColumnsInOrderBy
      case 100 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxColumnsInSelect
      case 101 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxColumnsInTable
      case 102 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxIndexSize
      case 104 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxRowSize
      case 105 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxStatementLen
      case 106 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxTablesInSelect
      case 107 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxUserNameLen
      case 115 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliOjCapabilities
      case 10000 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliXopenCliYear
      case 10001 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliCursorSensitivity
      case 10002 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliDescribeParameter
      case 10003 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliCatalogName
      case 10004 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliCollationSeq
      case 10005 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxIdentifierLen
      case 10006 => org.apache.hive.service.rpc.thrift.TGetInfoType.CliOdbcKeywords
      case _ => throw new NoSuchElementException(value.toString)
    }

  /**
   * Find the enum by its integer value, as defined in the Thrift IDL.
   * returns an EnumUnknownTGetInfoType(value) if the value is not found.
   * In particular this allows ignoring new values added to an enum
   * in the IDL on the producer side when the consumer was not updated.
   */
  def getOrUnknown(value: Int): org.apache.hive.service.rpc.thrift.TGetInfoType =
    get(value) match {
      case _root_.scala.Some(e) => e
      case _root_.scala.None => EnumUnknownTGetInfoType(value)
    }

  /**
   * Find the enum by its integer value, as defined in the Thrift IDL.
   * Returns None if the value is not found
   */
  def get(value: Int): _root_.scala.Option[org.apache.hive.service.rpc.thrift.TGetInfoType] =
    value match {
      case 0 => _SomeCliMaxDriverConnections
      case 1 => _SomeCliMaxConcurrentActivities
      case 2 => _SomeCliDataSourceName
      case 8 => _SomeCliFetchDirection
      case 13 => _SomeCliServerName
      case 14 => _SomeCliSearchPatternEscape
      case 17 => _SomeCliDbmsName
      case 18 => _SomeCliDbmsVer
      case 19 => _SomeCliAccessibleTables
      case 20 => _SomeCliAccessibleProcedures
      case 23 => _SomeCliCursorCommitBehavior
      case 25 => _SomeCliDataSourceReadOnly
      case 26 => _SomeCliDefaultTxnIsolation
      case 28 => _SomeCliIdentifierCase
      case 29 => _SomeCliIdentifierQuoteChar
      case 30 => _SomeCliMaxColumnNameLen
      case 31 => _SomeCliMaxCursorNameLen
      case 32 => _SomeCliMaxSchemaNameLen
      case 34 => _SomeCliMaxCatalogNameLen
      case 35 => _SomeCliMaxTableNameLen
      case 43 => _SomeCliScrollConcurrency
      case 46 => _SomeCliTxnCapable
      case 47 => _SomeCliUserName
      case 72 => _SomeCliTxnIsolationOption
      case 73 => _SomeCliIntegrity
      case 81 => _SomeCliGetdataExtensions
      case 85 => _SomeCliNullCollation
      case 86 => _SomeCliAlterTable
      case 90 => _SomeCliOrderByColumnsInSelect
      case 94 => _SomeCliSpecialCharacters
      case 97 => _SomeCliMaxColumnsInGroupBy
      case 98 => _SomeCliMaxColumnsInIndex
      case 99 => _SomeCliMaxColumnsInOrderBy
      case 100 => _SomeCliMaxColumnsInSelect
      case 101 => _SomeCliMaxColumnsInTable
      case 102 => _SomeCliMaxIndexSize
      case 104 => _SomeCliMaxRowSize
      case 105 => _SomeCliMaxStatementLen
      case 106 => _SomeCliMaxTablesInSelect
      case 107 => _SomeCliMaxUserNameLen
      case 115 => _SomeCliOjCapabilities
      case 10000 => _SomeCliXopenCliYear
      case 10001 => _SomeCliCursorSensitivity
      case 10002 => _SomeCliDescribeParameter
      case 10003 => _SomeCliCatalogName
      case 10004 => _SomeCliCollationSeq
      case 10005 => _SomeCliMaxIdentifierLen
      case 10006 => _SomeCliOdbcKeywords
      case _ => _root_.scala.None
    }

  def valueOf(name: String): _root_.scala.Option[org.apache.hive.service.rpc.thrift.TGetInfoType] =
    name.toLowerCase match {
      case "climaxdriverconnections" => _SomeCliMaxDriverConnections
      case "climaxconcurrentactivities" => _SomeCliMaxConcurrentActivities
      case "clidatasourcename" => _SomeCliDataSourceName
      case "clifetchdirection" => _SomeCliFetchDirection
      case "cliservername" => _SomeCliServerName
      case "clisearchpatternescape" => _SomeCliSearchPatternEscape
      case "clidbmsname" => _SomeCliDbmsName
      case "clidbmsver" => _SomeCliDbmsVer
      case "cliaccessibletables" => _SomeCliAccessibleTables
      case "cliaccessibleprocedures" => _SomeCliAccessibleProcedures
      case "clicursorcommitbehavior" => _SomeCliCursorCommitBehavior
      case "clidatasourcereadonly" => _SomeCliDataSourceReadOnly
      case "clidefaulttxnisolation" => _SomeCliDefaultTxnIsolation
      case "cliidentifiercase" => _SomeCliIdentifierCase
      case "cliidentifierquotechar" => _SomeCliIdentifierQuoteChar
      case "climaxcolumnnamelen" => _SomeCliMaxColumnNameLen
      case "climaxcursornamelen" => _SomeCliMaxCursorNameLen
      case "climaxschemanamelen" => _SomeCliMaxSchemaNameLen
      case "climaxcatalognamelen" => _SomeCliMaxCatalogNameLen
      case "climaxtablenamelen" => _SomeCliMaxTableNameLen
      case "cliscrollconcurrency" => _SomeCliScrollConcurrency
      case "clitxncapable" => _SomeCliTxnCapable
      case "cliusername" => _SomeCliUserName
      case "clitxnisolationoption" => _SomeCliTxnIsolationOption
      case "cliintegrity" => _SomeCliIntegrity
      case "cligetdataextensions" => _SomeCliGetdataExtensions
      case "clinullcollation" => _SomeCliNullCollation
      case "clialtertable" => _SomeCliAlterTable
      case "cliorderbycolumnsinselect" => _SomeCliOrderByColumnsInSelect
      case "clispecialcharacters" => _SomeCliSpecialCharacters
      case "climaxcolumnsingroupby" => _SomeCliMaxColumnsInGroupBy
      case "climaxcolumnsinindex" => _SomeCliMaxColumnsInIndex
      case "climaxcolumnsinorderby" => _SomeCliMaxColumnsInOrderBy
      case "climaxcolumnsinselect" => _SomeCliMaxColumnsInSelect
      case "climaxcolumnsintable" => _SomeCliMaxColumnsInTable
      case "climaxindexsize" => _SomeCliMaxIndexSize
      case "climaxrowsize" => _SomeCliMaxRowSize
      case "climaxstatementlen" => _SomeCliMaxStatementLen
      case "climaxtablesinselect" => _SomeCliMaxTablesInSelect
      case "climaxusernamelen" => _SomeCliMaxUserNameLen
      case "cliojcapabilities" => _SomeCliOjCapabilities
      case "clixopencliyear" => _SomeCliXopenCliYear
      case "clicursorsensitivity" => _SomeCliCursorSensitivity
      case "clidescribeparameter" => _SomeCliDescribeParameter
      case "clicatalogname" => _SomeCliCatalogName
      case "clicollationseq" => _SomeCliCollationSeq
      case "climaxidentifierlen" => _SomeCliMaxIdentifierLen
      case "cliodbckeywords" => _SomeCliOdbcKeywords
      case _ => _root_.scala.None
    }

  lazy val list: List[org.apache.hive.service.rpc.thrift.TGetInfoType] = scala.List[org.apache.hive.service.rpc.thrift.TGetInfoType](
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxDriverConnections,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxConcurrentActivities,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliDataSourceName,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliFetchDirection,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliServerName,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliSearchPatternEscape,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliDbmsName,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliDbmsVer,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliAccessibleTables,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliAccessibleProcedures,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliCursorCommitBehavior,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliDataSourceReadOnly,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliDefaultTxnIsolation,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliIdentifierCase,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliIdentifierQuoteChar,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxColumnNameLen,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxCursorNameLen,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxSchemaNameLen,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxCatalogNameLen,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxTableNameLen,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliScrollConcurrency,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliTxnCapable,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliUserName,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliTxnIsolationOption,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliIntegrity,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliGetdataExtensions,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliNullCollation,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliAlterTable,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliOrderByColumnsInSelect,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliSpecialCharacters,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxColumnsInGroupBy,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxColumnsInIndex,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxColumnsInOrderBy,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxColumnsInSelect,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxColumnsInTable,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxIndexSize,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxRowSize,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxStatementLen,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxTablesInSelect,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxUserNameLen,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliOjCapabilities,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliXopenCliYear,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliCursorSensitivity,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliDescribeParameter,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliCatalogName,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliCollationSeq,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliMaxIdentifierLen,
    org.apache.hive.service.rpc.thrift.TGetInfoType.CliOdbcKeywords
  )
}



@javax.annotation.Generated(value = Array("com.twitter.scrooge.Compiler"))
sealed trait TGetInfoType extends ThriftEnum with Serializable