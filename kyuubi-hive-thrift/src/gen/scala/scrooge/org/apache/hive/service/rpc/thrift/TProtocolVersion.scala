/**
 * Generated by Scrooge
 *   version: 19.12.0
 *   rev: dfdb68cf6b9c501dbbe3ae644504bf403ad76bfa
 *   built at: 20191212-171820
 */
package org.apache.hive.service.rpc.thrift

import com.twitter.scrooge.ThriftEnum
import scala.collection.immutable.{Map => immutable$Map}


@javax.annotation.Generated(value = Array("com.twitter.scrooge.Compiler"))
case object TProtocolVersion extends _root_.com.twitter.scrooge.ThriftEnumObject[TProtocolVersion] {

  val annotations: immutable$Map[String, String] = immutable$Map.empty

  
  case object HiveCliServiceProtocolV1 extends org.apache.hive.service.rpc.thrift.TProtocolVersion {
    val value: Int = 0
    val name: String = "HiveCliServiceProtocolV1"
    val originalName: String = "HIVE_CLI_SERVICE_PROTOCOL_V1"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeHiveCliServiceProtocolV1 = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TProtocolVersion.HiveCliServiceProtocolV1)
  
  case object HiveCliServiceProtocolV2 extends org.apache.hive.service.rpc.thrift.TProtocolVersion {
    val value: Int = 1
    val name: String = "HiveCliServiceProtocolV2"
    val originalName: String = "HIVE_CLI_SERVICE_PROTOCOL_V2"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeHiveCliServiceProtocolV2 = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TProtocolVersion.HiveCliServiceProtocolV2)
  
  case object HiveCliServiceProtocolV3 extends org.apache.hive.service.rpc.thrift.TProtocolVersion {
    val value: Int = 2
    val name: String = "HiveCliServiceProtocolV3"
    val originalName: String = "HIVE_CLI_SERVICE_PROTOCOL_V3"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeHiveCliServiceProtocolV3 = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TProtocolVersion.HiveCliServiceProtocolV3)
  
  case object HiveCliServiceProtocolV4 extends org.apache.hive.service.rpc.thrift.TProtocolVersion {
    val value: Int = 3
    val name: String = "HiveCliServiceProtocolV4"
    val originalName: String = "HIVE_CLI_SERVICE_PROTOCOL_V4"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeHiveCliServiceProtocolV4 = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TProtocolVersion.HiveCliServiceProtocolV4)
  
  case object HiveCliServiceProtocolV5 extends org.apache.hive.service.rpc.thrift.TProtocolVersion {
    val value: Int = 4
    val name: String = "HiveCliServiceProtocolV5"
    val originalName: String = "HIVE_CLI_SERVICE_PROTOCOL_V5"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeHiveCliServiceProtocolV5 = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TProtocolVersion.HiveCliServiceProtocolV5)
  
  case object HiveCliServiceProtocolV6 extends org.apache.hive.service.rpc.thrift.TProtocolVersion {
    val value: Int = 5
    val name: String = "HiveCliServiceProtocolV6"
    val originalName: String = "HIVE_CLI_SERVICE_PROTOCOL_V6"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeHiveCliServiceProtocolV6 = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TProtocolVersion.HiveCliServiceProtocolV6)
  
  case object HiveCliServiceProtocolV7 extends org.apache.hive.service.rpc.thrift.TProtocolVersion {
    val value: Int = 6
    val name: String = "HiveCliServiceProtocolV7"
    val originalName: String = "HIVE_CLI_SERVICE_PROTOCOL_V7"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeHiveCliServiceProtocolV7 = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TProtocolVersion.HiveCliServiceProtocolV7)
  
  case object HiveCliServiceProtocolV8 extends org.apache.hive.service.rpc.thrift.TProtocolVersion {
    val value: Int = 7
    val name: String = "HiveCliServiceProtocolV8"
    val originalName: String = "HIVE_CLI_SERVICE_PROTOCOL_V8"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeHiveCliServiceProtocolV8 = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TProtocolVersion.HiveCliServiceProtocolV8)
  
  case object HiveCliServiceProtocolV9 extends org.apache.hive.service.rpc.thrift.TProtocolVersion {
    val value: Int = 8
    val name: String = "HiveCliServiceProtocolV9"
    val originalName: String = "HIVE_CLI_SERVICE_PROTOCOL_V9"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeHiveCliServiceProtocolV9 = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TProtocolVersion.HiveCliServiceProtocolV9)
  
  case object HiveCliServiceProtocolV10 extends org.apache.hive.service.rpc.thrift.TProtocolVersion {
    val value: Int = 9
    val name: String = "HiveCliServiceProtocolV10"
    val originalName: String = "HIVE_CLI_SERVICE_PROTOCOL_V10"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeHiveCliServiceProtocolV10 = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TProtocolVersion.HiveCliServiceProtocolV10)
  
  case object HiveCliServiceProtocolV11 extends org.apache.hive.service.rpc.thrift.TProtocolVersion {
    val value: Int = 10
    val name: String = "HiveCliServiceProtocolV11"
    val originalName: String = "HIVE_CLI_SERVICE_PROTOCOL_V11"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeHiveCliServiceProtocolV11 = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TProtocolVersion.HiveCliServiceProtocolV11)

  case class EnumUnknownTProtocolVersion(value: Int)
    extends org.apache.hive.service.rpc.thrift.TProtocolVersion with _root_.com.twitter.scrooge.EnumItemUnknown
  {
    val name: String = "EnumUnknownTProtocolVersion" + value
    def originalName: String = name
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  /**
   * Find the enum by its integer value, as defined in the Thrift IDL.
   */
  def apply(value: Int): org.apache.hive.service.rpc.thrift.TProtocolVersion =
    value match {
      case 0 => org.apache.hive.service.rpc.thrift.TProtocolVersion.HiveCliServiceProtocolV1
      case 1 => org.apache.hive.service.rpc.thrift.TProtocolVersion.HiveCliServiceProtocolV2
      case 2 => org.apache.hive.service.rpc.thrift.TProtocolVersion.HiveCliServiceProtocolV3
      case 3 => org.apache.hive.service.rpc.thrift.TProtocolVersion.HiveCliServiceProtocolV4
      case 4 => org.apache.hive.service.rpc.thrift.TProtocolVersion.HiveCliServiceProtocolV5
      case 5 => org.apache.hive.service.rpc.thrift.TProtocolVersion.HiveCliServiceProtocolV6
      case 6 => org.apache.hive.service.rpc.thrift.TProtocolVersion.HiveCliServiceProtocolV7
      case 7 => org.apache.hive.service.rpc.thrift.TProtocolVersion.HiveCliServiceProtocolV8
      case 8 => org.apache.hive.service.rpc.thrift.TProtocolVersion.HiveCliServiceProtocolV9
      case 9 => org.apache.hive.service.rpc.thrift.TProtocolVersion.HiveCliServiceProtocolV10
      case 10 => org.apache.hive.service.rpc.thrift.TProtocolVersion.HiveCliServiceProtocolV11
      case _ => throw new NoSuchElementException(value.toString)
    }

  /**
   * Find the enum by its integer value, as defined in the Thrift IDL.
   * returns an EnumUnknownTProtocolVersion(value) if the value is not found.
   * In particular this allows ignoring new values added to an enum
   * in the IDL on the producer side when the consumer was not updated.
   */
  def getOrUnknown(value: Int): org.apache.hive.service.rpc.thrift.TProtocolVersion =
    get(value) match {
      case _root_.scala.Some(e) => e
      case _root_.scala.None => EnumUnknownTProtocolVersion(value)
    }

  /**
   * Find the enum by its integer value, as defined in the Thrift IDL.
   * Returns None if the value is not found
   */
  def get(value: Int): _root_.scala.Option[org.apache.hive.service.rpc.thrift.TProtocolVersion] =
    value match {
      case 0 => _SomeHiveCliServiceProtocolV1
      case 1 => _SomeHiveCliServiceProtocolV2
      case 2 => _SomeHiveCliServiceProtocolV3
      case 3 => _SomeHiveCliServiceProtocolV4
      case 4 => _SomeHiveCliServiceProtocolV5
      case 5 => _SomeHiveCliServiceProtocolV6
      case 6 => _SomeHiveCliServiceProtocolV7
      case 7 => _SomeHiveCliServiceProtocolV8
      case 8 => _SomeHiveCliServiceProtocolV9
      case 9 => _SomeHiveCliServiceProtocolV10
      case 10 => _SomeHiveCliServiceProtocolV11
      case _ => _root_.scala.None
    }

  def valueOf(name: String): _root_.scala.Option[org.apache.hive.service.rpc.thrift.TProtocolVersion] =
    name.toLowerCase match {
      case "hivecliserviceprotocolv1" => _SomeHiveCliServiceProtocolV1
      case "hivecliserviceprotocolv2" => _SomeHiveCliServiceProtocolV2
      case "hivecliserviceprotocolv3" => _SomeHiveCliServiceProtocolV3
      case "hivecliserviceprotocolv4" => _SomeHiveCliServiceProtocolV4
      case "hivecliserviceprotocolv5" => _SomeHiveCliServiceProtocolV5
      case "hivecliserviceprotocolv6" => _SomeHiveCliServiceProtocolV6
      case "hivecliserviceprotocolv7" => _SomeHiveCliServiceProtocolV7
      case "hivecliserviceprotocolv8" => _SomeHiveCliServiceProtocolV8
      case "hivecliserviceprotocolv9" => _SomeHiveCliServiceProtocolV9
      case "hivecliserviceprotocolv10" => _SomeHiveCliServiceProtocolV10
      case "hivecliserviceprotocolv11" => _SomeHiveCliServiceProtocolV11
      case _ => _root_.scala.None
    }

  lazy val list: List[org.apache.hive.service.rpc.thrift.TProtocolVersion] = scala.List[org.apache.hive.service.rpc.thrift.TProtocolVersion](
    org.apache.hive.service.rpc.thrift.TProtocolVersion.HiveCliServiceProtocolV1,
    org.apache.hive.service.rpc.thrift.TProtocolVersion.HiveCliServiceProtocolV2,
    org.apache.hive.service.rpc.thrift.TProtocolVersion.HiveCliServiceProtocolV3,
    org.apache.hive.service.rpc.thrift.TProtocolVersion.HiveCliServiceProtocolV4,
    org.apache.hive.service.rpc.thrift.TProtocolVersion.HiveCliServiceProtocolV5,
    org.apache.hive.service.rpc.thrift.TProtocolVersion.HiveCliServiceProtocolV6,
    org.apache.hive.service.rpc.thrift.TProtocolVersion.HiveCliServiceProtocolV7,
    org.apache.hive.service.rpc.thrift.TProtocolVersion.HiveCliServiceProtocolV8,
    org.apache.hive.service.rpc.thrift.TProtocolVersion.HiveCliServiceProtocolV9,
    org.apache.hive.service.rpc.thrift.TProtocolVersion.HiveCliServiceProtocolV10,
    org.apache.hive.service.rpc.thrift.TProtocolVersion.HiveCliServiceProtocolV11
  )
}



@javax.annotation.Generated(value = Array("com.twitter.scrooge.Compiler"))
sealed trait TProtocolVersion extends ThriftEnum with Serializable