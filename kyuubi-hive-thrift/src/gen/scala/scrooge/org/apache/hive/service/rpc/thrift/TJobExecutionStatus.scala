/**
 * Generated by Scrooge
 *   version: 19.12.0
 *   rev: dfdb68cf6b9c501dbbe3ae644504bf403ad76bfa
 *   built at: 20191212-171820
 */
package org.apache.hive.service.rpc.thrift

import com.twitter.scrooge.ThriftEnum
import scala.collection.immutable.{Map => immutable$Map}


@javax.annotation.Generated(value = Array("com.twitter.scrooge.Compiler"))
case object TJobExecutionStatus extends _root_.com.twitter.scrooge.ThriftEnumObject[TJobExecutionStatus] {

  val annotations: immutable$Map[String, String] = immutable$Map.empty

  
  case object InProgress extends org.apache.hive.service.rpc.thrift.TJobExecutionStatus {
    val value: Int = 0
    val name: String = "InProgress"
    val originalName: String = "IN_PROGRESS"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeInProgress = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TJobExecutionStatus.InProgress)
  
  case object Complete extends org.apache.hive.service.rpc.thrift.TJobExecutionStatus {
    val value: Int = 1
    val name: String = "Complete"
    val originalName: String = "COMPLETE"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeComplete = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TJobExecutionStatus.Complete)
  
  case object NotAvailable extends org.apache.hive.service.rpc.thrift.TJobExecutionStatus {
    val value: Int = 2
    val name: String = "NotAvailable"
    val originalName: String = "NOT_AVAILABLE"
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  private[this] val _SomeNotAvailable = _root_.scala.Some(org.apache.hive.service.rpc.thrift.TJobExecutionStatus.NotAvailable)

  case class EnumUnknownTJobExecutionStatus(value: Int)
    extends org.apache.hive.service.rpc.thrift.TJobExecutionStatus with _root_.com.twitter.scrooge.EnumItemUnknown
  {
    val name: String = "EnumUnknownTJobExecutionStatus" + value
    def originalName: String = name
    val annotations: immutable$Map[String, String] = immutable$Map.empty
  }

  /**
   * Find the enum by its integer value, as defined in the Thrift IDL.
   */
  def apply(value: Int): org.apache.hive.service.rpc.thrift.TJobExecutionStatus =
    value match {
      case 0 => org.apache.hive.service.rpc.thrift.TJobExecutionStatus.InProgress
      case 1 => org.apache.hive.service.rpc.thrift.TJobExecutionStatus.Complete
      case 2 => org.apache.hive.service.rpc.thrift.TJobExecutionStatus.NotAvailable
      case _ => throw new NoSuchElementException(value.toString)
    }

  /**
   * Find the enum by its integer value, as defined in the Thrift IDL.
   * returns an EnumUnknownTJobExecutionStatus(value) if the value is not found.
   * In particular this allows ignoring new values added to an enum
   * in the IDL on the producer side when the consumer was not updated.
   */
  def getOrUnknown(value: Int): org.apache.hive.service.rpc.thrift.TJobExecutionStatus =
    get(value) match {
      case _root_.scala.Some(e) => e
      case _root_.scala.None => EnumUnknownTJobExecutionStatus(value)
    }

  /**
   * Find the enum by its integer value, as defined in the Thrift IDL.
   * Returns None if the value is not found
   */
  def get(value: Int): _root_.scala.Option[org.apache.hive.service.rpc.thrift.TJobExecutionStatus] =
    value match {
      case 0 => _SomeInProgress
      case 1 => _SomeComplete
      case 2 => _SomeNotAvailable
      case _ => _root_.scala.None
    }

  def valueOf(name: String): _root_.scala.Option[org.apache.hive.service.rpc.thrift.TJobExecutionStatus] =
    name.toLowerCase match {
      case "inprogress" => _SomeInProgress
      case "complete" => _SomeComplete
      case "notavailable" => _SomeNotAvailable
      case _ => _root_.scala.None
    }

  lazy val list: List[org.apache.hive.service.rpc.thrift.TJobExecutionStatus] = scala.List[org.apache.hive.service.rpc.thrift.TJobExecutionStatus](
    org.apache.hive.service.rpc.thrift.TJobExecutionStatus.InProgress,
    org.apache.hive.service.rpc.thrift.TJobExecutionStatus.Complete,
    org.apache.hive.service.rpc.thrift.TJobExecutionStatus.NotAvailable
  )
}



@javax.annotation.Generated(value = Array("com.twitter.scrooge.Compiler"))
sealed trait TJobExecutionStatus extends ThriftEnum with Serializable